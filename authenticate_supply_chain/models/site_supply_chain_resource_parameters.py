# coding: utf-8

"""
    Authenticate Platform Supply Chain API

    Through this API you can Manage products and suppliers. Access to this API is restricted to authenticated users. Before accessing this API, first authenticate via the \"Account\" API. (https://uat-account.authenticateis.com/)  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: platform-support@authenticateis.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SiteSupplyChainResourceParameters(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'search_query': 'str',
        'page_number': 'int',
        'page_size': 'int',
        'order_by': 'str',
        'function_values': 'list[str]',
        'status_values': 'list[str]',
        'risk_values': 'list[str]',
        'country_ids': 'list[str]',
        'site_ids': 'list[str]',
        'primary_site': 'bool',
        'company_id': 'str',
        'licence_numbers': 'list[str]',
        'esg_assessment_outcome': 'EsgOutcomeEnum',
        'esg_assessment_status': 'EsgStatusEnum',
        'supplier_tiers': 'list[int]',
        'category_ids': 'list[str]',
        'supplier_codes': 'list[str]',
        'search_type': 'SiteSearchTypeEnum',
        'search_term': 'str'
    }

    attribute_map = {
        'search_query': 'searchQuery',
        'page_number': 'pageNumber',
        'page_size': 'pageSize',
        'order_by': 'orderBy',
        'function_values': 'functionValues',
        'status_values': 'statusValues',
        'risk_values': 'riskValues',
        'country_ids': 'countryIds',
        'site_ids': 'siteIds',
        'primary_site': 'primarySite',
        'company_id': 'companyId',
        'licence_numbers': 'licenceNumbers',
        'esg_assessment_outcome': 'esgAssessmentOutcome',
        'esg_assessment_status': 'esgAssessmentStatus',
        'supplier_tiers': 'supplierTiers',
        'category_ids': 'categoryIds',
        'supplier_codes': 'supplierCodes',
        'search_type': 'searchType',
        'search_term': 'searchTerm'
    }

    def __init__(self, search_query=None, page_number=None, page_size=None, order_by=None, function_values=None, status_values=None, risk_values=None, country_ids=None, site_ids=None, primary_site=None, company_id=None, licence_numbers=None, esg_assessment_outcome=None, esg_assessment_status=None, supplier_tiers=None, category_ids=None, supplier_codes=None, search_type=None, search_term=None):  # noqa: E501
        """SiteSupplyChainResourceParameters - a model defined in Swagger"""  # noqa: E501
        self._search_query = None
        self._page_number = None
        self._page_size = None
        self._order_by = None
        self._function_values = None
        self._status_values = None
        self._risk_values = None
        self._country_ids = None
        self._site_ids = None
        self._primary_site = None
        self._company_id = None
        self._licence_numbers = None
        self._esg_assessment_outcome = None
        self._esg_assessment_status = None
        self._supplier_tiers = None
        self._category_ids = None
        self._supplier_codes = None
        self._search_type = None
        self._search_term = None
        self.discriminator = None
        if search_query is not None:
            self.search_query = search_query
        if page_number is not None:
            self.page_number = page_number
        if page_size is not None:
            self.page_size = page_size
        if order_by is not None:
            self.order_by = order_by
        if function_values is not None:
            self.function_values = function_values
        if status_values is not None:
            self.status_values = status_values
        if risk_values is not None:
            self.risk_values = risk_values
        if country_ids is not None:
            self.country_ids = country_ids
        if site_ids is not None:
            self.site_ids = site_ids
        if primary_site is not None:
            self.primary_site = primary_site
        if company_id is not None:
            self.company_id = company_id
        if licence_numbers is not None:
            self.licence_numbers = licence_numbers
        if esg_assessment_outcome is not None:
            self.esg_assessment_outcome = esg_assessment_outcome
        if esg_assessment_status is not None:
            self.esg_assessment_status = esg_assessment_status
        if supplier_tiers is not None:
            self.supplier_tiers = supplier_tiers
        if category_ids is not None:
            self.category_ids = category_ids
        if supplier_codes is not None:
            self.supplier_codes = supplier_codes
        if search_type is not None:
            self.search_type = search_type
        if search_term is not None:
            self.search_term = search_term

    @property
    def search_query(self):
        """Gets the search_query of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The search_query of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: str
        """
        return self._search_query

    @search_query.setter
    def search_query(self, search_query):
        """Sets the search_query of this SiteSupplyChainResourceParameters.


        :param search_query: The search_query of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: str
        """

        self._search_query = search_query

    @property
    def page_number(self):
        """Gets the page_number of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The page_number of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this SiteSupplyChainResourceParameters.


        :param page_number: The page_number of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: int
        """

        self._page_number = page_number

    @property
    def page_size(self):
        """Gets the page_size of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The page_size of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this SiteSupplyChainResourceParameters.


        :param page_size: The page_size of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: int
        """

        self._page_size = page_size

    @property
    def order_by(self):
        """Gets the order_by of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The order_by of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: str
        """
        return self._order_by

    @order_by.setter
    def order_by(self, order_by):
        """Sets the order_by of this SiteSupplyChainResourceParameters.


        :param order_by: The order_by of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: str
        """

        self._order_by = order_by

    @property
    def function_values(self):
        """Gets the function_values of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The function_values of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: list[str]
        """
        return self._function_values

    @function_values.setter
    def function_values(self, function_values):
        """Sets the function_values of this SiteSupplyChainResourceParameters.


        :param function_values: The function_values of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: list[str]
        """

        self._function_values = function_values

    @property
    def status_values(self):
        """Gets the status_values of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The status_values of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: list[str]
        """
        return self._status_values

    @status_values.setter
    def status_values(self, status_values):
        """Sets the status_values of this SiteSupplyChainResourceParameters.


        :param status_values: The status_values of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: list[str]
        """

        self._status_values = status_values

    @property
    def risk_values(self):
        """Gets the risk_values of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The risk_values of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: list[str]
        """
        return self._risk_values

    @risk_values.setter
    def risk_values(self, risk_values):
        """Sets the risk_values of this SiteSupplyChainResourceParameters.


        :param risk_values: The risk_values of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: list[str]
        """

        self._risk_values = risk_values

    @property
    def country_ids(self):
        """Gets the country_ids of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The country_ids of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: list[str]
        """
        return self._country_ids

    @country_ids.setter
    def country_ids(self, country_ids):
        """Sets the country_ids of this SiteSupplyChainResourceParameters.


        :param country_ids: The country_ids of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: list[str]
        """

        self._country_ids = country_ids

    @property
    def site_ids(self):
        """Gets the site_ids of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The site_ids of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: list[str]
        """
        return self._site_ids

    @site_ids.setter
    def site_ids(self, site_ids):
        """Sets the site_ids of this SiteSupplyChainResourceParameters.


        :param site_ids: The site_ids of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: list[str]
        """

        self._site_ids = site_ids

    @property
    def primary_site(self):
        """Gets the primary_site of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The primary_site of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: bool
        """
        return self._primary_site

    @primary_site.setter
    def primary_site(self, primary_site):
        """Sets the primary_site of this SiteSupplyChainResourceParameters.


        :param primary_site: The primary_site of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: bool
        """

        self._primary_site = primary_site

    @property
    def company_id(self):
        """Gets the company_id of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The company_id of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: str
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this SiteSupplyChainResourceParameters.


        :param company_id: The company_id of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: str
        """

        self._company_id = company_id

    @property
    def licence_numbers(self):
        """Gets the licence_numbers of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The licence_numbers of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: list[str]
        """
        return self._licence_numbers

    @licence_numbers.setter
    def licence_numbers(self, licence_numbers):
        """Sets the licence_numbers of this SiteSupplyChainResourceParameters.


        :param licence_numbers: The licence_numbers of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: list[str]
        """

        self._licence_numbers = licence_numbers

    @property
    def esg_assessment_outcome(self):
        """Gets the esg_assessment_outcome of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The esg_assessment_outcome of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: EsgOutcomeEnum
        """
        return self._esg_assessment_outcome

    @esg_assessment_outcome.setter
    def esg_assessment_outcome(self, esg_assessment_outcome):
        """Sets the esg_assessment_outcome of this SiteSupplyChainResourceParameters.


        :param esg_assessment_outcome: The esg_assessment_outcome of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: EsgOutcomeEnum
        """

        self._esg_assessment_outcome = esg_assessment_outcome

    @property
    def esg_assessment_status(self):
        """Gets the esg_assessment_status of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The esg_assessment_status of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: EsgStatusEnum
        """
        return self._esg_assessment_status

    @esg_assessment_status.setter
    def esg_assessment_status(self, esg_assessment_status):
        """Sets the esg_assessment_status of this SiteSupplyChainResourceParameters.


        :param esg_assessment_status: The esg_assessment_status of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: EsgStatusEnum
        """

        self._esg_assessment_status = esg_assessment_status

    @property
    def supplier_tiers(self):
        """Gets the supplier_tiers of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The supplier_tiers of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: list[int]
        """
        return self._supplier_tiers

    @supplier_tiers.setter
    def supplier_tiers(self, supplier_tiers):
        """Sets the supplier_tiers of this SiteSupplyChainResourceParameters.


        :param supplier_tiers: The supplier_tiers of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: list[int]
        """

        self._supplier_tiers = supplier_tiers

    @property
    def category_ids(self):
        """Gets the category_ids of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The category_ids of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: list[str]
        """
        return self._category_ids

    @category_ids.setter
    def category_ids(self, category_ids):
        """Sets the category_ids of this SiteSupplyChainResourceParameters.


        :param category_ids: The category_ids of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: list[str]
        """

        self._category_ids = category_ids

    @property
    def supplier_codes(self):
        """Gets the supplier_codes of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The supplier_codes of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: list[str]
        """
        return self._supplier_codes

    @supplier_codes.setter
    def supplier_codes(self, supplier_codes):
        """Sets the supplier_codes of this SiteSupplyChainResourceParameters.


        :param supplier_codes: The supplier_codes of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: list[str]
        """

        self._supplier_codes = supplier_codes

    @property
    def search_type(self):
        """Gets the search_type of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The search_type of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: SiteSearchTypeEnum
        """
        return self._search_type

    @search_type.setter
    def search_type(self, search_type):
        """Sets the search_type of this SiteSupplyChainResourceParameters.


        :param search_type: The search_type of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: SiteSearchTypeEnum
        """

        self._search_type = search_type

    @property
    def search_term(self):
        """Gets the search_term of this SiteSupplyChainResourceParameters.  # noqa: E501


        :return: The search_term of this SiteSupplyChainResourceParameters.  # noqa: E501
        :rtype: str
        """
        return self._search_term

    @search_term.setter
    def search_term(self, search_term):
        """Sets the search_term of this SiteSupplyChainResourceParameters.


        :param search_term: The search_term of this SiteSupplyChainResourceParameters.  # noqa: E501
        :type: str
        """

        self._search_term = search_term

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SiteSupplyChainResourceParameters, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SiteSupplyChainResourceParameters):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
