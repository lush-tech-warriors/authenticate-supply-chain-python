# coding: utf-8

"""
    Authenticate Platform Supply Chain API

    Through this API you can Manage products and suppliers. Access to this API is restricted to authenticated users. Before accessing this API, first authenticate via the \"Account\" API. (https://uat-account.authenticateis.com/)  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: platform-support@authenticateis.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SiteRelationshipForManipulationDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'status': 'RelationshipStatusEnum',
        'status_details': 'str',
        'risk': 'RelationshipRiskEnum',
        'risk_details': 'str',
        'review_date': 'datetime',
        'review_details': 'str',
        'supplier_spend': 'str',
        'supplier_spend_currency_code': 'CompanySiteRelationshipCurrencyEnum',
        'functions': 'list[str]',
        'categories': 'list[str]'
    }

    attribute_map = {
        'status': 'status',
        'status_details': 'statusDetails',
        'risk': 'risk',
        'risk_details': 'riskDetails',
        'review_date': 'reviewDate',
        'review_details': 'reviewDetails',
        'supplier_spend': 'supplierSpend',
        'supplier_spend_currency_code': 'supplierSpendCurrencyCode',
        'functions': 'functions',
        'categories': 'categories'
    }

    def __init__(self, status=None, status_details=None, risk=None, risk_details=None, review_date=None, review_details=None, supplier_spend=None, supplier_spend_currency_code=None, functions=None, categories=None):  # noqa: E501
        """SiteRelationshipForManipulationDto - a model defined in Swagger"""  # noqa: E501
        self._status = None
        self._status_details = None
        self._risk = None
        self._risk_details = None
        self._review_date = None
        self._review_details = None
        self._supplier_spend = None
        self._supplier_spend_currency_code = None
        self._functions = None
        self._categories = None
        self.discriminator = None
        if status is not None:
            self.status = status
        if status_details is not None:
            self.status_details = status_details
        if risk is not None:
            self.risk = risk
        if risk_details is not None:
            self.risk_details = risk_details
        if review_date is not None:
            self.review_date = review_date
        if review_details is not None:
            self.review_details = review_details
        if supplier_spend is not None:
            self.supplier_spend = supplier_spend
        if supplier_spend_currency_code is not None:
            self.supplier_spend_currency_code = supplier_spend_currency_code
        if functions is not None:
            self.functions = functions
        if categories is not None:
            self.categories = categories

    @property
    def status(self):
        """Gets the status of this SiteRelationshipForManipulationDto.  # noqa: E501


        :return: The status of this SiteRelationshipForManipulationDto.  # noqa: E501
        :rtype: RelationshipStatusEnum
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SiteRelationshipForManipulationDto.


        :param status: The status of this SiteRelationshipForManipulationDto.  # noqa: E501
        :type: RelationshipStatusEnum
        """

        self._status = status

    @property
    def status_details(self):
        """Gets the status_details of this SiteRelationshipForManipulationDto.  # noqa: E501

        The further information regarding the status  # noqa: E501

        :return: The status_details of this SiteRelationshipForManipulationDto.  # noqa: E501
        :rtype: str
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this SiteRelationshipForManipulationDto.

        The further information regarding the status  # noqa: E501

        :param status_details: The status_details of this SiteRelationshipForManipulationDto.  # noqa: E501
        :type: str
        """

        self._status_details = status_details

    @property
    def risk(self):
        """Gets the risk of this SiteRelationshipForManipulationDto.  # noqa: E501


        :return: The risk of this SiteRelationshipForManipulationDto.  # noqa: E501
        :rtype: RelationshipRiskEnum
        """
        return self._risk

    @risk.setter
    def risk(self, risk):
        """Sets the risk of this SiteRelationshipForManipulationDto.


        :param risk: The risk of this SiteRelationshipForManipulationDto.  # noqa: E501
        :type: RelationshipRiskEnum
        """

        self._risk = risk

    @property
    def risk_details(self):
        """Gets the risk_details of this SiteRelationshipForManipulationDto.  # noqa: E501

        The further information regarding the risk  # noqa: E501

        :return: The risk_details of this SiteRelationshipForManipulationDto.  # noqa: E501
        :rtype: str
        """
        return self._risk_details

    @risk_details.setter
    def risk_details(self, risk_details):
        """Sets the risk_details of this SiteRelationshipForManipulationDto.

        The further information regarding the risk  # noqa: E501

        :param risk_details: The risk_details of this SiteRelationshipForManipulationDto.  # noqa: E501
        :type: str
        """

        self._risk_details = risk_details

    @property
    def review_date(self):
        """Gets the review_date of this SiteRelationshipForManipulationDto.  # noqa: E501

        The review date for the site  # noqa: E501

        :return: The review_date of this SiteRelationshipForManipulationDto.  # noqa: E501
        :rtype: datetime
        """
        return self._review_date

    @review_date.setter
    def review_date(self, review_date):
        """Sets the review_date of this SiteRelationshipForManipulationDto.

        The review date for the site  # noqa: E501

        :param review_date: The review_date of this SiteRelationshipForManipulationDto.  # noqa: E501
        :type: datetime
        """

        self._review_date = review_date

    @property
    def review_details(self):
        """Gets the review_details of this SiteRelationshipForManipulationDto.  # noqa: E501

        The further information regarding the review  # noqa: E501

        :return: The review_details of this SiteRelationshipForManipulationDto.  # noqa: E501
        :rtype: str
        """
        return self._review_details

    @review_details.setter
    def review_details(self, review_details):
        """Sets the review_details of this SiteRelationshipForManipulationDto.

        The further information regarding the review  # noqa: E501

        :param review_details: The review_details of this SiteRelationshipForManipulationDto.  # noqa: E501
        :type: str
        """

        self._review_details = review_details

    @property
    def supplier_spend(self):
        """Gets the supplier_spend of this SiteRelationshipForManipulationDto.  # noqa: E501

        The supplier spend for the site  # noqa: E501

        :return: The supplier_spend of this SiteRelationshipForManipulationDto.  # noqa: E501
        :rtype: str
        """
        return self._supplier_spend

    @supplier_spend.setter
    def supplier_spend(self, supplier_spend):
        """Sets the supplier_spend of this SiteRelationshipForManipulationDto.

        The supplier spend for the site  # noqa: E501

        :param supplier_spend: The supplier_spend of this SiteRelationshipForManipulationDto.  # noqa: E501
        :type: str
        """

        self._supplier_spend = supplier_spend

    @property
    def supplier_spend_currency_code(self):
        """Gets the supplier_spend_currency_code of this SiteRelationshipForManipulationDto.  # noqa: E501


        :return: The supplier_spend_currency_code of this SiteRelationshipForManipulationDto.  # noqa: E501
        :rtype: CompanySiteRelationshipCurrencyEnum
        """
        return self._supplier_spend_currency_code

    @supplier_spend_currency_code.setter
    def supplier_spend_currency_code(self, supplier_spend_currency_code):
        """Sets the supplier_spend_currency_code of this SiteRelationshipForManipulationDto.


        :param supplier_spend_currency_code: The supplier_spend_currency_code of this SiteRelationshipForManipulationDto.  # noqa: E501
        :type: CompanySiteRelationshipCurrencyEnum
        """

        self._supplier_spend_currency_code = supplier_spend_currency_code

    @property
    def functions(self):
        """Gets the functions of this SiteRelationshipForManipulationDto.  # noqa: E501

        The functions for the site  # noqa: E501

        :return: The functions of this SiteRelationshipForManipulationDto.  # noqa: E501
        :rtype: list[str]
        """
        return self._functions

    @functions.setter
    def functions(self, functions):
        """Sets the functions of this SiteRelationshipForManipulationDto.

        The functions for the site  # noqa: E501

        :param functions: The functions of this SiteRelationshipForManipulationDto.  # noqa: E501
        :type: list[str]
        """

        self._functions = functions

    @property
    def categories(self):
        """Gets the categories of this SiteRelationshipForManipulationDto.  # noqa: E501

        The categories for the site  # noqa: E501

        :return: The categories of this SiteRelationshipForManipulationDto.  # noqa: E501
        :rtype: list[str]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this SiteRelationshipForManipulationDto.

        The categories for the site  # noqa: E501

        :param categories: The categories of this SiteRelationshipForManipulationDto.  # noqa: E501
        :type: list[str]
        """

        self._categories = categories

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SiteRelationshipForManipulationDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SiteRelationshipForManipulationDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
