# coding: utf-8

"""
    Authenticate Platform Supply Chain API

    Through this API you can Manage products and suppliers. Access to this API is restricted to authenticated users. Before accessing this API, first authenticate via the \"Account\" API. (https://uat-account.authenticateis.com/)  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: platform-support@authenticateis.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RawMaterialRecordDocumentDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'file_name': 'str',
        'file_extension': 'str',
        'external_provider_reference': 'str'
    }

    attribute_map = {
        'file_name': 'fileName',
        'file_extension': 'fileExtension',
        'external_provider_reference': 'externalProviderReference'
    }

    def __init__(self, file_name=None, file_extension=None, external_provider_reference=None):  # noqa: E501
        """RawMaterialRecordDocumentDto - a model defined in Swagger"""  # noqa: E501
        self._file_name = None
        self._file_extension = None
        self._external_provider_reference = None
        self.discriminator = None
        self.file_name = file_name
        self.file_extension = file_extension
        self.external_provider_reference = external_provider_reference

    @property
    def file_name(self):
        """Gets the file_name of this RawMaterialRecordDocumentDto.  # noqa: E501

        File name  # noqa: E501

        :return: The file_name of this RawMaterialRecordDocumentDto.  # noqa: E501
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this RawMaterialRecordDocumentDto.

        File name  # noqa: E501

        :param file_name: The file_name of this RawMaterialRecordDocumentDto.  # noqa: E501
        :type: str
        """
        if file_name is None:
            raise ValueError("Invalid value for `file_name`, must not be `None`")  # noqa: E501

        self._file_name = file_name

    @property
    def file_extension(self):
        """Gets the file_extension of this RawMaterialRecordDocumentDto.  # noqa: E501

        File extension  # noqa: E501

        :return: The file_extension of this RawMaterialRecordDocumentDto.  # noqa: E501
        :rtype: str
        """
        return self._file_extension

    @file_extension.setter
    def file_extension(self, file_extension):
        """Sets the file_extension of this RawMaterialRecordDocumentDto.

        File extension  # noqa: E501

        :param file_extension: The file_extension of this RawMaterialRecordDocumentDto.  # noqa: E501
        :type: str
        """
        if file_extension is None:
            raise ValueError("Invalid value for `file_extension`, must not be `None`")  # noqa: E501

        self._file_extension = file_extension

    @property
    def external_provider_reference(self):
        """Gets the external_provider_reference of this RawMaterialRecordDocumentDto.  # noqa: E501

        External provider Reference  # noqa: E501

        :return: The external_provider_reference of this RawMaterialRecordDocumentDto.  # noqa: E501
        :rtype: str
        """
        return self._external_provider_reference

    @external_provider_reference.setter
    def external_provider_reference(self, external_provider_reference):
        """Sets the external_provider_reference of this RawMaterialRecordDocumentDto.

        External provider Reference  # noqa: E501

        :param external_provider_reference: The external_provider_reference of this RawMaterialRecordDocumentDto.  # noqa: E501
        :type: str
        """
        if external_provider_reference is None:
            raise ValueError("Invalid value for `external_provider_reference`, must not be `None`")  # noqa: E501

        self._external_provider_reference = external_provider_reference

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RawMaterialRecordDocumentDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RawMaterialRecordDocumentDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
